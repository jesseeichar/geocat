<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
" >

	<import resource="config-spring-env.xml" />
	<import resource="config-security/config-security.xml" />
	<import resource="config-summary.xml" />
	<import resource="classpath:JZkitApplicationContext.xml" />

	<import resource="config-db/initial_data.xml" />
	<import resource="config-print/config-spring-print.xml" />

    <!-- Uncomment the database configuration you need to use -->
    <!--<import resource="config-db/h2.xml"/>-->
 	<!--<import resource="config-db/jndi-postgres-postgis.xml"/> -->
 	<!--<import resource="config-db/oracle.xml"/>-->
 	<!--<import resource="config-db/mysql.xml"/> -->
 	<!--<import resource="config-db/db2.xml"/> -->
 	<import resource="config-db/postgres.xml"/>
 	<!--<import resource="config-db/sqlserver.xml"/> -->

    <!-- Uncomment if you want to use a non-shapefile datastore -->
	<!--<import resource="config-db/postgis-shared-datasource.xml"/> -->
    <import resource="config-db/postgis-alternate-datasource.xml"/>

	<!-- Import the versioning configuration (subversion etc...) -->
	<import resource="config-versioning.xml" />


	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>

	<bean id="luceneDirectoryFactory" class="org.fao.geonet.kernel.search.index.FSDirectoryFactory"
		lazy-init="true" />

    <bean id="httpRequestFactor" class="org.fao.geonet.utils.GeonetHttpRequestFactory">
        <property name="numberOfConcurrentRequests" value="30" />
    </bean>

    <bean id="defaultLanguage" class="java.lang.String">
        <constructor-arg index="0" value="eng" />
    </bean>
	<!-- Define the languages in the UI. Seems like these should come from database 
		at some point but at the moment they are needed here. -->
    <util:set id="languages" value-type="java.lang.String">
        <value>eng</value>
        <value>fre</value>
        <value>ger</value>
        <value>ita</value>
    </util:set>

    <util:map id="jpaPropertyMap">
		<entry key="shared-cache-mode" value="ENABLE_SELECTIVE" />
		<entry key="javax.persistence.lock.timeout" value="30000" />
		<entry key="org.hibernate.flushMode" value="AUTO" />
		<entry key="access" value="PROPERTY" />
		<entry key="hibernate.id.new_generator_mappings" value="true" />
		<entry key="hibernate.cache.use_second_level_cache" value="true" />
		<!--<entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.internal.NoCachingRegionFactory"/> -->
		<entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
		<entry key="hibernate.jdbc.batch_size" value="3" />
		<entry key="hibernate.jdbc.batch_versioned_data" value="true" />
		<entry key="hibernate.enable_lazy_load_no_trans" value="true" />
    <!-- If a specific schema has to be used
    <entry key="hibernate.default_schema" value="catalog"/>

    Note: If using more than one catalog in different schema
    hibernate may failed to create sequence
    (https://hibernate.atlassian.net/browse/HHH-5538).
    In that case you may want to use a custom dialect
    <entry key="hibernate.dialect" value="org.fao.geonet.dialect.CustomPostgreSQLDialect" />
    -->
	</util:map>

    <util:list id="wro4jUrlsToInitialize" value-type="java.lang.String" >
        <value>lib.js</value>
        <value>nv.d3.css</value>
        <value>gn_search_default.css</value>
        <value>gn_search_default.js</value>
        <value>gn_editor.css</value>
        <value>gn_editor.js</value>
        <value>gn_admin_default.css </value>
        <value>gn_admin.js</value>
        <value>gn_login_default.css</value>
        <value>srv_custom_style.css</value>
        <value>gn_login.js</value>
        <!-- GEOCAT -->
        <value>gn_search_geocat.css</value>
        <value>gn_search_geocat.js</value>
        <value>geocat_shared_objects_app.js</value>
        <value>geocat_shared_objects_app_geocat.css</value>
        <value>geocat_shared_objects_edit.js</value>
        <value>geocat_shared_objects_edit_geocat.css</value>
        <!-- END GEOCAT -->
    </util:list>

    <util:list id="formattersToInitialize" value-type="java.lang.String" >
        <value>full_view</value>
        <value>xml_view</value>
    </util:list>

    <util:set id="formatterRemoteFormatAllowedHosts" value-type="java.lang.String">
    </util:set>
    <bean id="threadResources" class="org.mapfish.print.ThreadResources">
        <property name="connectionTimeout" value="30000"/>
        <property name="socketTimeout" value="30000" />
        <property name="globalParallelFetches" value="50"/>
        <property name="perHostParallelFetches" value="10" />
    </bean>
</beans>
